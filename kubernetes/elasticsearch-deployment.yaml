apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f ../docker/docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: elasticsearch
  name: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: elasticsearch
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f ../docker/docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: elasticsearch
    spec:
      containers:
      - env:
        - name: ATOM_DEBUG_IP
          value: 172.22.0.1
        - name: ATOM_DEVELOPMENT_MODE
          value: on
        - name: ATOM_ELASTICSEARCH_HOST
          value: elasticsearch
        - name: ATOM_GEARMAND_HOST
          value: gearmand
        - name: ATOM_MEMCACHED_HOST
          value: memcached
        - name: ATOM_MYSQL_DSN
          value: mysql:host=percona;port=3306;dbname=atom;charset=utf8mb4
        - name: ATOM_MYSQL_PASSWORD
          value: atom_12345
        - name: ATOM_MYSQL_USERNAME
          value: atom
        - name: ES_JAVA_OPTS
          value: -Xms640m -Xmx640m
        - name: MYSQL_DATABASE
          value: atom
        - name: MYSQL_PASSWORD
          value: atom_12345
        - name: MYSQL_ROOT_PASSWORD
          value: my-secret-pw
        - name: MYSQL_USER
          value: atom
        - name: bootstrap.memory_lock
          value: "true"
        - name: cluster.routing.allocation.disk.threshold_enabled
          value: "false"
        - name: xpack.security.enabled
          value: "false"
        image: docker.elastic.co/elasticsearch/elasticsearch:5.6.16
        imagePullPolicy: ""
        name: elasticsearch
        ports:
        - containerPort: 9200
          hostIP: 127.0.0.1
        resources: {}
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: elasticsearch-data
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: elasticsearch-data
        persistentVolumeClaim:
          claimName: elasticsearch-data
status: {}
